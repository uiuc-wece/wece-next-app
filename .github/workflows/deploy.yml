name: deploy website

on:
  push:
    branches: [master]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: check out repo
        uses: actions/checkout@v2

      - name: use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: server - NPM install
        working-directory: ./api
        run: |
          npm install --force --legacy-peer-deps
          echo "Server - NPM install completed successfully"

      - name: client - NPM install
        working-directory: ./client
        run: |
          npm install
          echo "Client - NPM install completed successfully"

      - name: client - NPM build
        working-directory: ./client
        run: npm run build --if-present

      # - name: Vercel Action
      #   uses: amondnet/vercel-action@v19.0.1+4
      #   with:
      #     vercel-token: ${{ secrets.VERCEL_TOKEN }}
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     vercel-args: "--prod  --yes" # Add --debug flag for debugging
      #     vercel-org-id: ${{ secrets.ORG_ID }}
      #     vercel-project-id: ${{ secrets.PROJECT_ID }}
      #     working-directory: ./

      - name: Deploy to Vercel
        working-directory: ./
        run: |
          npm i -g vercel
          vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
          vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
          vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.PROJECT_ID }}
